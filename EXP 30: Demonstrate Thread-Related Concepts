#include <stdio.h>
#include <pthread.h>
#include <unistd.h>

// Function that each thread will execute
void* display(void* arg) {
    int thread_num = *((int*)arg);
    printf("Thread %d is running...\n", thread_num);
    sleep(1);
    printf("Thread %d finished execution.\n", thread_num);
    pthread_exit(NULL);
}

int main() {
    pthread_t t1, t2;      // Two thread identifiers
    int id1 = 1, id2 = 2;  // Thread IDs for display

    // 1. Create two threads
    pthread_create(&t1, NULL, display, &id1);
    pthread_create(&t2, NULL, display, &id2);
    printf("Threads created successfully.\n");

    // 2. Check if both threads are equal
    if (pthread_equal(t1, t2))
        printf("Threads are equal.\n");
    else
        printf("Threads are not equal.\n");

    // 3. Join threads (wait until they finish)
    pthread_join(t1, NULL);
    pthread_join(t2, NULL);
    printf("Both threads have completed execution.\n");

    // 4. Exit main thread
    pthread_exit(NULL);
    return 0;
}
